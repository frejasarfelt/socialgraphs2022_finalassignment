the course introduces a commonly used object oriented programming language  and applies agile development methods covering the following topics   the topics presented are     types  primitive and referenced    basic programming constructs  loops  branching statements  etc      values  operators and expressions    classes  objects  fields and methods    use of libraries    design of classes  hierarchies  inheritance    abstraction  abstract classes  interfaces     error exception handling   simple design patterns and basic software architectures   pair programming   user stories  behavior driven development  unit testing    debugging  refactoring   version control  continuous integration   use of development tools  ide  etc lectures and exercise classes  the exercise classes involve solving smaller exercises as well as the development of a software system in teams of 4 6 students  the project work is documented by running software  tests  and reports that are included in the overall assessment of the course the aim of the course is to convey the basic concepts of object oriented programming and to enable the student to apply these concepts using common object oriented programming languages   the student will be able to read program code and analyze the behavior of the program  in addition  the student will be able to apply contemporary agile software development practices in the context of smaller software development projects both extending existing software and developing new functionality  a focus will be put on quality assurance like automated testing and continuous integration  moreover the student will learn to work in teams  present the work  and document it  the student will also learn to work with contemporary software development tools  e g   ides  etc  