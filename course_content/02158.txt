concurrent programming  processes  synchronization  communication  process models  atomic actions   safety and liveness properties  deadlock  verification techniques and tools  critical regions  semaphores  monitors  synchronous and asynchronous message passing  call mechanisms  distributed objects  tupple spaces  concurrent data structures   system design   common communication patterns and algorithms  client server paradigm  transactions and concurrency control  asynchronous and task based programming lectures  exercise classes  and programming laboratories to provide the participants with a conceptual and practical basis for construction of systems comprising multiple interacting concurrent activities the course is a specialization course within the bachelor programme in software technology 