the course covers reasoning principles  technologies  and design decisions underlying automated deductive verification tools  in particular  it introduces  1  program logics for writing formal correctness proofs  for example weakest preconditions and separation logic    2  smt solvers  for example z3  for automating reasoning about logical formulas   3  intermediate verification languages  for example viper  for encoding verification methodologies  and  4  source code verifiers for handling feature rich programming languages  the course will intermix technical content with hands on experience lectures  exercises  and project work mainly research papers and selected book chapters  the relevant material will be made available on dtu s intranet this course offers a hands on introduction to the usage  construction  and theory of automated deductive program verifiers  students should acquire the skills to apply and extend tool supported methodologies for developing proven correct software 